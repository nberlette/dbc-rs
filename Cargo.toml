[workspace]
  resolver = "2"
  members  = ["core", "grammar", "macros", "parser", "shared", "wasm"]

[workspace.package]
  authors = ["Nicholas Berlette <nick@berlette.com>"]
  version = "0.1.0"
  edition = "2024"
  publish = false
  license = "MIT OR Apache-2.0"
  description = "A collection of libraries for parsing, validating, and serializing CAN database definitions (or 'DBCs') in Rust, with support for Deno, Node.js, Bun, and the web, via FFI and WebAssembly builds."
  repository = "https://github.com/nberlette/canbus"
  homepage = "https://canbus.app"
  documentation = "https://docs.canbus.app"
  readme = "README.md"
  keywords = [
    "can",
    "dbc",
    "networking",
    "automotive",
    "industrial",
    "can protocol",
    "webassembly",
    "lin",
    "flexray",
    "kline",
    "obd2",
    "most",
    "iso19141",
    "iso14229",
    "iso15765",
    "iso11898",
  ]
  categories = ["development-tools", "networking", "parsing", "serialization"]

[workspace.dependencies]
  # internal deps on other workspace members
  dbc_core   = { path = "./core" }
  dbc_macros = { path = "./macros" }
  dbc_shared = { path = "./shared" }
  dbc_parser = { path = "./parser" }

  # common to multiple workspace members
  anyhow = "1.0"
  thiserror = "2.0"
  serde = { version = "=1.0.219", default-features = false, features = [
    "derive",
    "rc",
    "alloc",
  ] }
  serde_json = { version = "=1.0.140", default-features = false, features = [
    "preserve_order",
    "alloc",
  ] }
  serde_yaml_ok = "=0.9.36"
  derive_more = { version = "2.0", default-features = false, features = [
    "full",
  ] }
  hashbrown = { version = "0.15.4", features = ["serde", "alloc"] }
  linkme = { version = "=0.3.33" }
  lol_alloc = "=0.4.1"

  # parsing/proc-macros/derives
  syn               = { version = "2.0.103", features = ["full"] }
  pest_typed        = { version = "0.20.8", features = ["serde"] }
  pest_derive       = { version = "2.7.14", features = ["grammar-extras"] }
  pest_typed_derive = { version = "0.20.8", features = ["grammar-extras"] }
  lazy_static       = { version = "=1.5", features = ["spin_no_std"] }
  regex             = { version = "=1.11.1", features = ["std"] }
  lalrpop           = { version = "0.22.2", features = ["lexer"] }
  logos             = { version = "0.15.0", features = ["std"] }
  lalrpop-util      = { version = "0.22.2", features = ["lexer"] }
  bitflags          = { version = "2.9.1" }
  proc-macro2       = { version = "1.0" }
  quote             = { version = "1.0" }
  pest              = { version = "2.7.14" }
  pest_consume      = { version = "1.1.3" }
  pest-ast          = { version = "0.3.5" }
  from-pest         = { version = "0.3.3" }

  # deps for FFI and WASM support
  deno_core = { version = "=0.352.0" }
  rusty_v8 = { version = "=0.32.1" }
  js-sys = { version = "=0.3.77" }
  serde-wasm-bindgen = { version = "=0.6.5" }
  wasm-bindgen = { version = "=0.2.100", features = [
    "enable-interning",
  ], default-features = false }

[profile.release]
  lto              = true
  opt-level        = "s"
  debug            = false
  debug-assertions = false
  strip            = "symbols"
  panic            = "abort"
  incremental      = true
  codegen-units    = 1

[profile.dev]
  debug            = true
  debug-assertions = true
  strip            = "none"
  panic            = "unwind"
  incremental      = true
  codegen-units    = 16
